{
  "hash": "e03ba9d915bb4d77edd8c99e136f4346",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"base plot\"\nauthor: Raphael Rehms\nformat: \n  revealjs:\n    scrollable: true\n    theme: solarized # moon\n    transition: slide\n    footer: \"Control flows and programming\"\n    slide-number: c\n    include-after-body: clean_title_page.html\n    fontsize: 25pt\n    highlight-style: github\nexecute: \n  echo: true\n  freeze: auto\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n# Visualization of Data\n\n## Graphics general\n- There are several kind of graphics available in R:\n\n- ```plot()```;  ```hist()```;  ```boxplot()```;\n\n- the title is set by argument ```main = 'Main title'```\n\n- the axes names by argument:\n\n    - ```xlab = 'x'``` for the x-axis; ```ylab = 'y'``` for the y-axis.\n\n    - color can be set by argument col (e.g., ```col='red'```, ```col='grey'```, . . . ).\n\n\n\n\n## Plot\n- It is the more general kind\n\n- needs the value for the x and the y\n\n- different types can be chosen (via argument ```type```):\n\n    - 'p' for points (defaults); 'l' for lines\n\n    - see help for more details.\n\n\n## Scatter plot\nA basic scatter plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- -5:5\ny <- (-5:5)^2\nplot(x, y, main=\"Graphic 1\")\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Line plot\nA basic line plot\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot(y ~ x, main=\"Graphic 2\", type=\"l\")\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n## Histogram\n- Command ```hist()```;\n\n- use the argument breaks to have more or less bars;\n\n- set option freq = TRUE for frequencies, freq = FALSE for densities;\n\n\n\n## Histogram set color\nA basic histogram \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nattach(sleep)\nhist(extra, main=\"Graphic 3\", col=\"grey\")\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Histogram set breaks \nA basic histogram with a custom number of breaks\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nattach(sleep)\nhist(extra, main=\"Graphic 4\", breaks=20, col=2)\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Boxplot\n\n- command ```boxplot()```;\n\n- easy to plot with different groups;\n\n- Parts of boxplot:\n    - median, \n    - 1^st^ and 3^rd^ quartile\n    - outliers\n\n\n\n## Single boxplot\nA basic boxplot \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nattach(sleep)\nboxplot(extra, main=\"Graphic title\")\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Multiple boxplots \n\nA boxplot with formula operator to make a boxplot for each group\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nboxplot(extra ~ group, main=\"Boxplot for each group\", ylab=\"extra\", xlab=\"group\")\n```\n\n::: {.cell-output-display}\n![](base_plot_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n# Exercise\n\n",
    "supporting": [
      "base_plot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}